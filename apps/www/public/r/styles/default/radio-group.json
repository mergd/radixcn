{
  "name": "radio-group",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-radio-group",
    "@radix-ui/themes"
  ],
  "files": [
    {
      "path": "ui/radio-group.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { RadioGroup as RadixRadioGroup } from \"@radix-ui/themes\";\nimport type { ComponentProps } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\n// Extend RadixRadioGroup props to maintain compatibility with existing usage\ninterface RadioGroupProps\n  extends Omit<ComponentProps<typeof RadixRadioGroup.Root>, \"size\"> {\n  className?: string;\n  size?: \"1\" | \"2\" | \"3\"; // Map to Radix Theme sizes\n}\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadixRadioGroup.Root>,\n  RadioGroupProps\n>(({ className, size = \"2\", ...props }, ref) => {\n  return (\n    <RadixRadioGroup.Root\n      ref={ref}\n      className={cn(\"grid gap-2\", className)}\n      size={size}\n      {...props}\n    />\n  );\n});\nRadioGroup.displayName = \"RadioGroup\";\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadixRadioGroup.Item>,\n  React.ComponentPropsWithoutRef<typeof RadixRadioGroup.Item>\n>(({ className, children, ...props }, ref) => {\n  return (\n    <RadixRadioGroup.Item\n      ref={ref}\n      className={cn(\n        \"cursor-pointer disabled:cursor-not-allowed disabled:opacity-50\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n    </RadixRadioGroup.Item>\n  );\n});\nRadioGroupItem.displayName = \"RadioGroupItem\";\n\nexport { RadioGroup, RadioGroupItem };\n\n/**\n * @deprecated Use RadioGroup from @radix-ui/themes instead. This component is kept for backwards compatibility.\n */\nexport type { RadioGroupProps };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}