{
  "name": "select",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-select"
  ],
  "files": [
    {
      "path": "ui/select.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Select as RadixSelect } from \"@radix-ui/themes\";\nimport { cn } from \"@/lib/utils\";\n\nconst Select = RadixSelect.Root;\n\nconst SelectGroup = RadixSelect.Group;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Trigger>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Trigger> & {\n    size?: \"1\" | \"2\" | \"3\";\n  }\n>(({ className, size = \"2\", children, ...props }, ref) => (\n  <RadixSelect.Trigger\n    ref={ref}\n    className={cn(\"cursor-pointer w-full shrink-0\", className)}\n    {...props}\n  >\n    {children}\n  </RadixSelect.Trigger>\n));\nSelectTrigger.displayName = RadixSelect.Trigger.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Content>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Content> & {\n    size?: \"1\" | \"2\" | \"3\";\n  }\n>(({ className, size = \"2\", ...props }, ref) => (\n  <RadixSelect.Content\n    ref={ref}\n    className={cn(\"min-w-[8rem]\", className)}\n    position=\"popper\"\n    {...props}\n  />\n));\nSelectContent.displayName = RadixSelect.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Label>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Label>\n>(({ className, ...props }, ref) => (\n  <RadixSelect.Label\n    ref={ref}\n    className={cn(\"font-medium\", className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = RadixSelect.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Item>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Item>\n>(({ className, children, ...props }, ref) => (\n  <RadixSelect.Item\n    ref={ref}\n    className={cn(\"cursor-pointer\", className)}\n    {...props}\n  >\n    {children}\n  </RadixSelect.Item>\n));\nSelectItem.displayName = RadixSelect.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Separator>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Separator>\n>(({ className, ...props }, ref) => (\n  <RadixSelect.Separator\n    ref={ref}\n    className={cn(\"my-1\", className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = RadixSelect.Separator.displayName;\n\n/**\n * @deprecated Use SelectTrigger children instead. Value display is handled by Radix Themes\n */\nconst SelectValue = React.forwardRef<\n  HTMLSpanElement,\n  React.HTMLAttributes<HTMLSpanElement> & {\n    placeholder?: string;\n  }\n>(({ className, children, placeholder, ...props }, ref) => (\n  <span ref={ref} {...props}>\n    {children || placeholder}\n  </span>\n));\nSelectValue.displayName = \"SelectValue\";\n\n/**\n * @deprecated Use SelectContent instead. ScrollUpButton is handled automatically by Radix Themes\n */\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Content>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Content>\n>(() => null);\nSelectScrollUpButton.displayName = \"SelectScrollUpButton\";\n\n/**\n * @deprecated Use SelectContent instead. ScrollDownButton is handled automatically by Radix Themes\n */\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Content>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Content>\n>(() => null);\nSelectScrollDownButton.displayName = \"SelectScrollDownButton\";\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}